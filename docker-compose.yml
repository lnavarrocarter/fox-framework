# ü¶ä Fox Framework - Docker Compose Configuration
# For local development and testing

version: '3.8'

services:
  # ==========================================
  # ü¶ä FOX FRAMEWORK APPLICATION
  # ==========================================
  fox-framework:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fox-framework-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    networks:
      - fox-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - postgres

  # ==========================================
  # üî¥ REDIS CACHE
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: fox-framework-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - fox-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # üêò POSTGRESQL DATABASE
  # ==========================================
  postgres:
    image: postgres:15-alpine
    container_name: fox-framework-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: foxframework
      POSTGRES_USER: foxuser
      POSTGRES_PASSWORD: foxpassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - fox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foxuser -d foxframework"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # üîÑ NGINX REVERSE PROXY
  # ==========================================
  nginx:
    image: nginx:alpine
    container_name: fox-framework-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - fox-network
    depends_on:
      - fox-framework
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # üìä PROMETHEUS MONITORING
  # ==========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: fox-framework-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - fox-network
    depends_on:
      - fox-framework

  # ==========================================
  # üìà GRAFANA DASHBOARDS
  # ==========================================
  grafana:
    image: grafana/grafana:latest
    container_name: fox-framework-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=foxgrafana
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - fox-network
    depends_on:
      - prometheus

# ==========================================
# üåê NETWORKS
# ==========================================
networks:
  fox-network:
    driver: bridge
    name: fox-framework-network

# ==========================================
# üíæ VOLUMES
# ==========================================
volumes:
  postgres-data:
    name: fox-framework-postgres-data
  redis-data:
    name: fox-framework-redis-data
  prometheus-data:
    name: fox-framework-prometheus-data
  grafana-data:
    name: fox-framework-grafana-data
