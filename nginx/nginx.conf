# ü¶ä Fox Framework - Nginx Configuration
# Production-ready reverse proxy configuration

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ==========================================
    # üìä LOGGING FORMAT
    # ==========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # ==========================================
    # üöÄ PERFORMANCE SETTINGS
    # ==========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ==========================================
    # üîí SECURITY HEADERS
    # ==========================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:;" always;

    # ==========================================
    # üîÑ UPSTREAM CONFIGURATION
    # ==========================================
    upstream fox_framework {
        server fox-framework:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # ==========================================
    # üåê SERVER CONFIGURATION
    # ==========================================
    server {
        listen 80;
        server_name localhost fox-framework.local;

        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # ==========================================
        # üìç LOCATION BLOCKS
        # ==========================================
        
        # Main application
        location / {
            proxy_pass http://fox_framework;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Health check endpoint (no logging)
        location /health {
            proxy_pass http://fox_framework/health;
            access_log off;
            proxy_read_timeout 10s;
            proxy_connect_timeout 10s;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            proxy_pass http://fox_framework/metrics;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            allow 10.0.0.0/8;     # Private networks
            deny all;
            access_log off;
        }

        # API endpoints with caching
        location /api/ {
            proxy_pass http://fox_framework;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API rate limiting
            limit_req zone=api burst=20 nodelay;
        }

        # Static files with caching
        location /static/ {
            proxy_pass http://fox_framework;
            expires 1M;
            add_header Cache-Control "public, immutable";
        }

        # ==========================================
        # üö´ SECURITY BLOCKS
        # ==========================================
        
        # Block common attack patterns
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            return 404;
        }

        # Block access to sensitive files
        location ~* \.(log|conf|config)$ {
            deny all;
            return 404;
        }
    }

    # ==========================================
    # üîí HTTPS SERVER (PRODUCTION)
    # ==========================================
    # server {
    #     listen 443 ssl http2;
    #     server_name fox-framework.com;
    # 
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    #     
    #     # Same location blocks as HTTP server above
    # }

    # ==========================================
    # üõ°Ô∏è RATE LIMITING
    # ==========================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_req_status 429;

    # ==========================================
    # üìä STATUS PAGE
    # ==========================================
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}
